From 46fc36063ac49c1d79b276e0952ce0314f752937 Mon Sep 17 00:00:00 2001
From: hhyasdf <552483776@qq.com>
Date: Tue, 28 Jun 2022 15:31:09 +0800
Subject: [PATCH 2/2] disable iptables mode detection

---
 dataplane/linux/int_dataplane.go |  4 ++--
 iptables/feature_detect.go       |  2 +-
 iptables/table.go                | 24 ++++++++++++++----------
 3 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/dataplane/linux/int_dataplane.go b/dataplane/linux/int_dataplane.go
index a09d235a..f5503efd 100644
--- a/dataplane/linux/int_dataplane.go
+++ b/dataplane/linux/int_dataplane.go
@@ -335,7 +335,7 @@ func NewIntDataplaneDriver(config Config) *InternalDataplane {
 	dp.ifaceMonitor.StateCallback = dp.onIfaceStateChange
 	dp.ifaceMonitor.AddrCallback = dp.onIfaceAddrsChange
 
-	backendMode := iptables.DetectBackend(config.LookPathOverride, iptables.NewRealCmd, config.IptablesBackend)
+	//backendMode := iptables.DetectBackend(config.LookPathOverride, iptables.NewRealCmd, config.IptablesBackend)
 
 	// Most iptables tables need the same options.
 	iptablesOptions := iptables.TableOptions{
@@ -345,7 +345,7 @@ func NewIntDataplaneDriver(config Config) *InternalDataplane {
 		PostWriteInterval:     config.IptablesPostWriteCheckInterval,
 		LockTimeout:           config.IptablesLockTimeout,
 		LockProbeInterval:     config.IptablesLockProbeInterval,
-		BackendMode:           backendMode,
+		//BackendMode:           backendMode,
 		LookPathOverride:      config.LookPathOverride,
 		OnStillAlive:          dp.reportHealth,
 		OpRecorder:            dp.loopSummarizer,
diff --git a/iptables/feature_detect.go b/iptables/feature_detect.go
index 603baad7..4f264cd3 100644
--- a/iptables/feature_detect.go
+++ b/iptables/feature_detect.go
@@ -269,7 +269,7 @@ func findBestBinary(lookPath func(file string) (string, error), ipVersion uint8,
 		verInfix = "6"
 	}
 	candidates := []string{
-		"ip" + verInfix + "tables-" + backendMode + "-" + saveOrRestore,
+		//"ip" + verInfix + "tables-" + backendMode + "-" + saveOrRestore,
 		"ip" + verInfix + "tables-" + saveOrRestore,
 	}
 
diff --git a/iptables/table.go b/iptables/table.go
index 064d1dec..8a1d492a 100644
--- a/iptables/table.go
+++ b/iptables/table.go
@@ -439,17 +439,21 @@ func NewTable(
 		table.onStillAlive = func() {}
 	}
 
-	iptablesVariant := strings.ToLower(options.BackendMode)
-	if iptablesVariant == "" {
-		iptablesVariant = "legacy"
-	}
-	if iptablesVariant == "nft" {
-		log.Info("Enabling iptables-in-nftables-mode workarounds.")
-		table.nftablesMode = true
-	}
+	//iptablesVariant := strings.ToLower(options.BackendMode)
+	//if iptablesVariant == "" {
+	//	iptablesVariant = "legacy"
+	//}
+	//if iptablesVariant == "nft" {
+	//	log.Info("Enabling iptables-in-nftables-mode workarounds.")
+	//	table.nftablesMode = true
+	//}
+	//
+	//table.iptablesRestoreCmd = findBestBinary(table.lookPath, ipVersion, iptablesVariant, "restore")
+	//table.iptablesSaveCmd = findBestBinary(table.lookPath, ipVersion, iptablesVariant, "save")
 
-	table.iptablesRestoreCmd = findBestBinary(table.lookPath, ipVersion, iptablesVariant, "restore")
-	table.iptablesSaveCmd = findBestBinary(table.lookPath, ipVersion, iptablesVariant, "save")
+	// do not use iptables-legacy/nft-xxx commands in hybridnet
+	table.iptablesRestoreCmd = findBestBinary(table.lookPath, ipVersion, "", "restore")
+	table.iptablesSaveCmd = findBestBinary(table.lookPath, ipVersion, "", "save")
 
 	return table
 }
-- 
2.30.1 (Apple Git-130)

